{"version":3,"sources":["components/WhiteForm/WhiteForm.js","users.js","components/Auth/Auth.js","pages/home/index.js","testQuest.js","components/Ans/Ans.js","components/Test/Test.js","components/Header/Header.js","pages/tests/index.js","components/TableRow/TableRow.js","components/Table/Table.js","pages/panel/index.js","App.js","serviceWorker.js","index.js"],"names":["WhiteForm","props","className","children","id","name","description","lastTest","Auth","state","login","loginError","password","passwordError","user","admin","userData","loginChangeHandler","event","target","value","setState","passwordChangeHandler","submitHandler","preventDefault","console","log","users","find","this","push","to","pathname","baseUrl","onSubmit","type","onChange","React","Component","HomePage","title","ans","trueAns","Ans","answer","i","j","answerTest","Test","leftPage","onFocusState","onFocus","setTimeout","closeTest","window","addEventListener","removeEventListener","quest","map","key","Header","TestsPage","testingMod","mistakes","alertType","openTest","miss","forEach","elem","testQuest","radioChange","ansId","location","role","onClick","TableRow","scope","Table","class","PanelPage","App","process","exact","path","component","Boolean","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a7759e3f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './WhiteForm.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction WhiteForm(props) {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className='WhiteForm col p-3'>\r\n        {props.children}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default WhiteForm;\r\n","export default [\r\n    {\r\n        id: 'admin',\r\n        name: 'Дима',\r\n        description: 'Администратор ресурса для тестирования водителей.'\r\n    },\r\n    {\r\n        id: 'user0',\r\n        name: 'Ваня',\r\n        description: 'Начинающий водитель',\r\n        lastTest: '28.10.20 в 19:23'\r\n    },\r\n    {\r\n        id: 'user1',\r\n        name: 'Саша',\r\n        description: 'Опытный водитель',\r\n        lastTest: '26.10.20 в 12:58'\r\n    },\r\n    {\r\n        id: 'user2',\r\n        name: 'Маша',\r\n        description: 'Странный водитель',\r\n        lastTest: '27.10.20 в 07:15'\r\n    }\r\n];\r\n","import React from 'react';\r\nimport './Auth.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport WhiteForm from '../WhiteForm/WhiteForm';\r\nimport users from '../../users';\r\n\r\n\r\nclass Auth extends React.Component {\r\n    state = {\r\n        login: '',\r\n        loginError: null,\r\n        password: '',\r\n        passwordError: null,\r\n        user: null,\r\n        admin: null,\r\n        userData: null\r\n    };\r\n\r\n    loginChangeHandler = event => {\r\n        const login = event.target.value;\r\n        this.setState({\r\n            login,\r\n            loginError: !login\r\n        });\r\n    };\r\n\r\n    passwordChangeHandler = event => {\r\n        const password = event.target.value;\r\n        this.setState({\r\n            password,\r\n            passwordError: !password\r\n        });\r\n    };\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n        const { login, password } = this.state;\r\n        console.log(login,password);\r\n\r\n        if (login && password) {\r\n\r\n          if ((users.find(user => user.id === login) != null)&&(users.find(user => user.id === login).id != 'admin')) this.setState({ user: true, userData: users.find(user => user.id === login) });\r\n          if (login == 'admin') this.setState({ admin: true, userData: users.find(user => user.id === login) });\r\n            this.setState({\r\n                login: '',\r\n                loginError: false,\r\n                password: '',\r\n                passwordError: false\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            loginError: !login,\r\n            passwordError: !password\r\n        });\r\n    };\r\n\r\n    render() {\r\n      const { login, loginError, password, passwordError, user, admin, userData } = this.state;\r\n      const baseUrl = process.env.PUBLIC_URL; // will be /hypercomp\r\n    return (\r\n        <WhiteForm>\r\n          {console.log('user: '+user, 'admin: '+admin)}\r\n        {user ? (<Redirect push to={{ pathname: baseUrl + '/tests', state: userData }} />) : (null)}\r\n        {admin ? (<Redirect push to={{ pathname: baseUrl + '/panel', state: userData }} />): (null)}\r\n          <form onSubmit={this.submitHandler}>\r\n            <div className=\"form-group\">\r\n              <label>Логин</label>\r\n              <input type=\"text\" value={login} onChange={this.loginChangeHandler} className=\"form-control\"></input>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Пароль</label>\r\n              <input type=\"password\" value={password} onChange={this.passwordChangeHandler} className=\"form-control\"></input>\r\n            </div>\r\n            <div className=\"form-group form-check\">\r\n              <input type=\"checkbox\" className=\"form-check-input\"></input>\r\n              <label className=\"form-check-label\">Запомнить</label>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Войти</button>\r\n          </form>\r\n        </WhiteForm>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","import React from 'react';\r\nimport Auth from '../../components/Auth/Auth';\r\n\r\nclass HomePage extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n          <div className=\"d-flex align-items-center justify-content-center col-8 col-md-4\">\r\n                  <Auth/>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","export default [\r\n    {\r\n        id: '0',\r\n        title: 'Разрешается ли водителю пользоваться телефоном во время движения?',\r\n        ans: ['Разрешается','Разрешается только при использовании технического устройства, позволяющего вести переговоры без использования рук','Разрешается только при движении со скоростью менее 20 км/ч','Запрещается'],\r\n        trueAns: 1\r\n    },\r\n    {\r\n        id: '1',\r\n        title: 'При движении на легковом автомобиле, оборудованном ремнями безопасности, должны быть пристегнуты:',\r\n        ans: ['Только водитель','Водитель и пассажир на переднем сиденье', 'Все лица, находящиеся в автомобиле'],\r\n        trueAns: 2\r\n    },\r\n    {\r\n        id: '2',\r\n        title: 'К категории «В» относятся автомобили:',\r\n        ans: ['С разрешенной максимальной массой не более 2,5 т и числом сидячих мест, помимо сиденья водителя, не более 8','С разрешенной максимальной массой не более 3,5 т и числом сидячих мест, помимо сиденья водителя, не более 8','С разрешенной максимальной массой не более 3,5 т и числом сидячих мест, помимо сиденья водителя, не более 16'],\r\n        trueAns: 1\r\n    },\r\n    {\r\n        id: '3',\r\n        title: 'В каком виде предусмотрено представление для проверки страхового полиса обязательного страхования гражданской ответственности?',\r\n        ans: ['На бумажном носителе','В виде электронного документа или его копии на бумажном носителе','В любом из перечисленных видов'],\r\n        trueAns: 2\r\n    }\r\n];\r\n","import React from 'react';\r\nimport './Ans.css';\r\n\r\nclass Ans extends React.Component{\r\n\r\n  render(){\r\n    const {answer, i, j} = this.props;\r\n    return (\r\n      <div className=\"form-check\">\r\n        <input className=\"form-check-input\" type=\"radio\" name={i} value={j}\r\n        onChange={this.props.answerTest}/>\r\n        <label className=\"form-check-label\">\r\n          {answer}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ans;\r\n","import React from 'react';\r\nimport './Test.css';\r\nimport Ans from '../Ans/Ans';\r\n\r\nclass Test extends React.Component {\r\n  state = {\r\n    leftPage: false,\r\n    onFocusState: true\r\n  }\r\n  componentDidMount() {\r\n      window.addEventListener(\"focus\", this.onFocus)\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"focus\", this.onFocus)\r\n}\r\n  onFocus = () => {\r\n    setTimeout(() => this.setState({}), 1000);\r\n    console.log(\"Пользовтаель покинул страницу\");\r\n    this.props.closeTest()\r\n  }\r\n  render() {\r\n    const quest = this.props.quest;\r\n    const { leftPage } = this.state;\r\n    return (\r\n      <div className=\"mb-3\">\r\n      <h5>{quest.title}</h5>\r\n      {quest.ans.map((answer, i) => {\r\n           return (<Ans key={i} answerTest={this.props.answerTest} answer={answer} i={quest.id} j={i} />)\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div className=\"row pb-3 pt-3\">\r\n          <div className='header col d-flex justify-content-between p-2'>\r\n          {props.children}\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport testQuest from '../../testQuest';\r\nimport Test from '../../components/Test/Test';\r\nimport Header from '../../components/Header/Header';\r\nimport WhiteForm from '../../components/WhiteForm/WhiteForm';\r\n\r\nclass TestsPage extends React.Component {\r\n  state = {\r\n    testingMod: null,\r\n    name: null,\r\n    ans: [null, null, null, null],\r\n    mistakes: null,\r\n    alertType: 0\r\n  };\r\n  openTest = () => {\r\n    this.setState({testingMod:!this.state.testingMod})\r\n    console.log(\"Функция закрытия теста вызвана.\");\r\n  }\r\n  answerTest = () => {\r\n    this.setState({alertType : 0})\r\n    this.setState({mistakes : 0})\r\n    const {testingMod, name, ans, mistakes, alertType} = this.state;\r\n    let miss = 0;\r\n    this.state.ans.forEach((elem, i) => {\r\n      if (elem != testQuest[i].trueAns) {console.log(`Ошибка в задание ${i}`); miss++;}\r\n    });\r\n    this.setState({mistakes : miss});\r\n    if (miss <= 0) this.setState({alertType : 2})\r\n    else this.setState({alertType : 1})\r\n\r\n  }\r\n  radioChange = event => {\r\n      const ansId = event.target.value;\r\n      const id = event.target.name;\r\n      this.state.ans[id] = ansId;\r\n  };\r\n\r\n    render() {\r\n        const userData = this.props.location.state;\r\n        const {testingMod, name, ans, mistakes, alertType} = this.state;\r\n        const baseUrl = process.env.PUBLIC_URL; // will be /hypercomp\r\n        return (\r\n          <div className=\"col-12 col-md-8\">\r\n            <Header>\r\n              <div>Здраствуйте, {userData.name}</div>\r\n              <Link to={baseUrl + \"/\"}>Выйти</Link>\r\n            </Header>\r\n            <WhiteForm>\r\n              {testingMod ? (\r\n              <form>\r\n              {testQuest.map((quest) => (\r\n                            <Test key={quest.id} answerTest={this.radioChange} closeTest={this.openTest} quest={quest} />\r\n                        ))}\r\n              {alertType == 2 ? (<div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n                <strong>Отлично!</strong> Тест выполнен без ошибок.\r\n              </div>) : (null)}\r\n              {alertType == 1 ? (<div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n                <strong>Ошибки: {mistakes}</strong> Перепройдите тест занова.\r\n              </div>) : (null)}\r\n\r\n              <a onClick={this.answerTest} className=\"btn btn-primary\">Отправить</a>\r\n              <a onClick={this.openTest} className=\"btn btn-danger\">Закрыть</a>\r\n              </form>\r\n              ) : (\r\n              <div>\r\n                Ваш стаж - {userData.description}\r\n                <br/>\r\n                Последнее тестирование - {userData.lastTest}\r\n                <br/>\r\n                <div className=\"d-flex justify-content-center pt-2\">\r\n                <button onClick={this.openTest} type=\"button\" className=\"btn btn-success\">Пройти тестирование</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            </WhiteForm>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TestsPage;\r\n","import React from 'react';\r\nimport './TableRow.css';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction TableRow(props) {\r\n    const user = props.user;\r\n    return (\r\n      <tr>\r\n        <th scope=\"row\">{user.id}</th>\r\n        <td>*</td>\r\n        <td>{user.name}</td>\r\n        <td>{user.description}</td>\r\n        <td>{user.lastTest}</td>\r\n      </tr>\r\n    );\r\n}\r\n\r\nexport default TableRow;\r\n","import React from 'react';\r\nimport './Table.css';\r\nimport users from '../../users';\r\nimport { Link } from 'react-router-dom';\r\nimport TableRow from '../TableRow/TableRow';\r\n\r\nfunction Table(props) {\r\n    return (\r\n      <div className=\"table-responsive\">\r\n        <table class=\"table table-bordered table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Login</th>\r\n              <th scope=\"col\">Paswword</th>\r\n              <th scope=\"col\">Имя</th>\r\n              <th scope=\"col\">Уровень навыков</th>\r\n              <th scope=\"col\">Дата и время прохождения теста</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {users.map((user) => (\r\n                        <TableRow key={user.id} user={user} />\r\n                    ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Table;\r\n","import React from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport { Link } from 'react-router-dom';\r\nimport WhiteForm from '../../components/WhiteForm/WhiteForm';\r\nimport Table from '../../components/Table/Table';\r\n\r\nclass PanelPage extends React.Component {\r\n\r\n    render() {\r\n        const  userData = this.props.location.state;\r\n        const baseUrl = process.env.PUBLIC_URL; // will be /hypercomp\r\n        return (\r\n          <div className=\"col-12 col-md-8\">\r\n            <Header>\r\n              <div>Здраствуйте, {userData.name}</div>\r\n              <Link to={baseUrl + \"/\"}>Выйти</Link>\r\n            </Header>\r\n            <WhiteForm>\r\n            <Table/>\r\n            </WhiteForm>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PanelPage;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport HomePage from './pages/home';\r\nimport TestsPage from './pages/tests';\r\nimport PanelPage from './pages/panel';\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        const baseUrl = process.env.PUBLIC_URL; // will be /hypercomp\r\n        return (\r\n                    <Switch>\r\n                        <Route exact path={baseUrl + \"/\"} component={HomePage} />\r\n                        <Route path={baseUrl + '/tests'} component={TestsPage} />\r\n                        <Route path={baseUrl + '/panel'} component={PanelPage} />\r\n                    </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst app = (\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}